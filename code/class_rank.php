<?php/*	Đây là file cung cấp chức năng Xem điểm xếp hạng tập thể lớp (class_rank).*/
session_start();
include_once('config/config.php');
include_once('function/function.php');
include_once('function/func_class_rank.php');
include_once('class/mysql.php');
include_once('class/xtemplate/xtemplate.class.php');
if (!RUNTIME_DEV_MODE) {
	error_reporting(E_ERROR | E_WARNING | E_PARSE);
}
$sql = new MySQL();
save_user_ip();if (RUNTIME_MOBILE_DETECT) {	$tpl = new XTemplate('template/mobile/trangchu.tpl');} else {	$tpl = new XTemplate('template/trangchu.tpl');}switch ($_GET['action']) {	case 'view_law':		$tpl->assign('marquee_text', NOTICE_MARQUEE);				$tpl->parse('main.class_rank.class_rank_law');		$tpl->parse('main.class_rank');				$sql->log('CLASS RANK LAW', null);		page_view(true, false, false);				break;	case 'view_rank':		$db_id = $_GET['db_id'];				if (!var_set($db_id)) {			outpage('Bạn chưa nhập ID của cơ sở dữ liệu !');		} elseif (!is_number($db_id)) {			outpage('ID của cơ sở dữ liệu phải là số nguyên khác 0 !');		}		$search = $sql->setquery('SELECT * FROM `db_info` WHERE `id` = '.$db_id);		if (mysql_num_rows($search) == 0) {			outpage('Không tồn tại cơ sở dữ liệu có ID là '.$db_id.'\nVui lòng xem lại danh sách cơ sở dữ liệu');		}				page_view(true, true, false);		$sql->log('VIEW CLASS RANK', "Database ID: [$db_id]");				$db_info = mysql_fetch_assoc($search);				$top_hs_dtb = top_hs();		$list_class = list_class($db_id);		$count_hs = count_hs($list_class);		$class_dtb = class_dtb($list_class);		$class_variance = class_variance($list_class);		$class_top_10p = class_top_10p($list_class);		$top3_class_10p = top3($class_top_10p);		$class_top_8p_10p = class_top_8p_10p($list_class);		$top3_class_8p_10p = top3($class_top_8p_10p);		$class_top_5p = class_top_5p($list_class);		$top3_class_5p = top3($class_top_5p);		
		for ($i = 0; $i <= (count($list_class)-1); $i++) {			$total_subtr_point = 0;			$total_add_point = 0;			$total_point = 0;			############################################################			############		ADD POINT		########################			############################################################			$total_add_point += each_hs_10p($list_class[$i]);			$total_add_point += each_hs_8p_10p($list_class[$i]);						$total_add_point += hs_top_1_green($list_class[$i]);			$total_add_point += hs_top_2_green($list_class[$i]);			$total_add_point += hs_top_3_green($list_class[$i]);			$total_add_point += hs_top_green($list_class[$i]);						$total_add_point += class_top_hpoint($list_class[$i]);			$total_add_point += class_top_lvariance($list_class[$i]);			################################################################			if (class_top_10p_1($list_class[$i])) {				$total_add_point += CLASS_TOP_10P_1;			} elseif (class_top_10p_2($list_class[$i])) {				$total_add_point += CLASS_TOP_10P_2;			} elseif (class_top_10p_3($list_class[$i])) {				$total_add_point += CLASS_TOP_10P_3;			}			################################################################			if (class_top_8p_10p_1($list_class[$i])) {				$total_add_point += CLASS_TOP_8P_10P_1;			} elseif (class_top_8p_10p_2($list_class[$i])) {				$total_add_point += CLASS_TOP_8P_10P_2;			} elseif (class_top_8p_10p_3($list_class[$i])) {				$total_add_point += CLASS_TOP_8P_10P_3;			}			#####################################################################			if ($class_dtb[$list_class[$i]] >= 8.000) {$total_add_point += EACH_CLASS_8P;}			if ($class_variance[$list_class[$i]] <= 1.200) {$total_add_point += EACH_CLASS_VARIANCE_12;}						$total_add_point += each_class_no_5p($list_class[$i]);			$total_add_point += each_class_80per_65p($list_class[$i]);			$total_add_point += each_class_50per_8p($list_class[$i]);			$total_add_point += each_class_5per_10p($list_class[$i]);						if (each_class_top_2hs_h($list_class[$i])) {				$total_add_point += EACH_CLASS_TOP_2HS_H;			} elseif (each_class_top_3hs_h($list_class[$i])) {				$total_add_point += EACH_CLASS_TOP_3HS_H;			}			############################################################			############		SUBTR POINT		########################			############################################################			$total_subtr_point += each_l5p($list_class[$i]);			$total_subtr_point += hs_top_1_red($list_class[$i]);			$total_subtr_point += hs_top_2_red($list_class[$i]);			$total_subtr_point += hs_top_3_red($list_class[$i]);			$total_subtr_point += hs_top_red($list_class[$i]);			$total_subtr_point += class_top_lpoint($list_class[$i]);			$total_subtr_point += class_top_hvariance($list_class[$i]);			################################################################			if (class_top_l5p_1($list_class[$i])) {				$total_subtr_point += CLASS_TOP_L5P_1;			} elseif (class_top_l5p_2($list_class[$i])) {				$total_subtr_point += CLASS_TOP_L5P_2;			} elseif (class_top_l5p_3($list_class[$i])) {				$total_subtr_point += CLASS_TOP_L5P_3;			}			#################################################################			if ($class_variance[$list_class[$i]] >= 3.500) {$total_subtr_point += EACH_CLASS_VARIANCE_35;}			if ($class_dtb[$list_class[$i]] <= 6.000) {$total_subtr_point += EACH_CLASS_6P;}			if (each_class_top_2hs_l($list_class[$i])) {				$total_subtr_point += EACH_CLASS_TOP_2HS_L;			} elseif (each_class_top_3hs_l($list_class[$i])) {				$total_subtr_point += EACH_CLASS_TOP_3HS_L;			}			$total_point = $total_add_point - $total_subtr_point;			$class_rank[$list_class[$i]] = array('total_add_point'=>$total_add_point, 'total_subtr_point'=>$total_subtr_point, 'total_point'=>$total_point);			$rank_[$list_class[$i]] = $total_point;					}		arsort($rank_);		foreach ($rank_ as $class => $total_point) {			$rank_class[$class] = array('total_point'=>$class_rank[$class]['total_point'],'total_subtr_point'=>$class_rank[$class]['total_subtr_point'],'total_add_point'=>$class_rank[$class]['total_add_point']); 
		}				$_SESSION['chart'] = $class_rank;		$_SESSION['db_id'] = $db_id;		
		$rank = 1;
		foreach ($rank_class as $class => $info) {
			$tpl->set_autoreset();						$tpl->assign('class', $class);
			$tpl->assign('count_hs', $count_hs[$class]);
			$tpl->assign('rank', $rank);		$rank++;
			$tpl->assign('db_id', $db_id);
			$tpl->assign('total_add_point', $info['total_add_point']);
			$tpl->assign('total_subtr_point', $info['total_subtr_point']);
			$tpl->assign('total_point', $info['total_point']);		
			$tpl->parse('main.class_rank.class_rank_overview.class');
		}
		$tpl->assign('marquee_text', NOTICE_MARQUEE);		$tpl->assign('db_name', $db_info['name'].' '.$db_info['comment'].' năm học '.$db_info['year']);		$tpl->assign('fb_link', SITE.'link.php?link='.base64_encode($_SERVER['REQUEST_URI']));		$tpl->assign('fb_title', 'PHPPV - Xem xếp hạng lớp');		$tpl->assign('fb_descr', 'Cơ sở dữ liệu: '.$db_info['name'].' ['.$db_info['comment'].'] năm học '.$db_info['year']);				$tpl->parse('main.class_rank.class_rank_overview');		$tpl->parse('main.class_rank.class_rank_header');		$tpl->parse('main.class_rank');		$tpl->assign('dynamic_title', '- Bảng điểm xếp hạng tập thể lớp - '.$db_info['name'].' '.$db_info['comment']);
				break;
	case 'more_detail':		$db_id = $_GET['db_id']		;		if (!var_set($db_id)) {			outpage('Bạn chưa nhập ID của cơ sở dữ liệu cần tra cứu !');		} else {			$search = $sql->setquery('SELECT * FROM `db_info` WHERE `id` = '.$db_id);			if (mysql_num_rows($search) == 0) {					outpage('Không tồn tại cơ sở dữ liệu có ID là '.$db_id.'\nVui lòng xem lại danh sách cơ sở dữ liệu');			}		}		$class = $_GET['class'];		if (!var_set($class)) {			outpage('Bạn chưa nhập ID của cơ sở dữ liệu cần tra cứu !');		} elseif (mysql_num_rows($sql->setquery('SELECT `sbd` FROM `database_'.$db_id.'` WHERE `class` = \''.$class.'\'')) == 0) {			outpage('Không tồn lớp ['.$class.'] trong cơ sở dữ liệu\nVui lòng xem lại danh sách cơ sở dữ liệu');		}				page_view(true, true, false);		$sql->log('VIEW CLASS RANK', "Database ID: [$db_id], Class: [$class]");		$db_info = mysql_fetch_assoc($search);				$top_hs_dtb = top_hs();		$list_class = list_class($db_id);		$count_hs = count_hs($list_class);		$class_dtb = class_dtb($list_class);		$class_variance = class_variance($list_class);		$class_top_10p = class_top_10p($list_class);		$top3_class_10p = top3($class_top_10p);		$class_top_8p_10p = class_top_8p_10p($list_class);		$top3_class_8p_10p = top3($class_top_8p_10p);		$class_top_5p = class_top_5p($list_class);		$top3_class_5p = top3($class_top_5p);						$tpl->assign('marquee_text', NOTICE_MARQUEE);		$tpl->assign('db_name', $db_info['name'].' '.$db_info['comment'].' năm học '.$db_info['year']);		$tpl->assign('subject_arr', $db_info['subject']);		$tpl->assign('class', $class);				$tpl->parse('main.class_rank.class_rank_header.class_rank_detail_header');		
		$total_add_point = 0;		$total_subtr_point = 0;		############################################################		############		ADD POINT		########################		############################################################				define('TOTAL_EACH_HS_10P', each_hs_10p($class));		$total_add_point += each_hs_10p($class);				define('TOTAL_EACH_HS_8P_10P', each_hs_8p_10p($class));		$total_add_point += each_hs_8p_10p($class);				define('TOTAL_HS_TOP_1_GREEN', hs_top_1_green($class));		$total_add_point += hs_top_1_green($class);				define('TOTAL_HS_TOP_2_GREEN', hs_top_2_green($class));		$total_add_point += hs_top_2_green($class);				define('TOTAL_HS_TOP_3_GREEN', hs_top_3_green($class));		$total_add_point += hs_top_3_green($class);				define('TOTAL_HS_TOP_GREEN', hs_top_green($class));		$total_add_point += hs_top_green($class);				define('TOTAL_CLASS_TOP_HPOINT', class_top_hpoint($class));		$total_add_point += class_top_hpoint($class);		define('TOTAL_CLASS_TOP_LVARIANCE', class_top_lvariance($class));		$total_add_point += class_top_lvariance($class);		if (class_top_10p_1($class)) {			define('TOTAL_CLASS_TOP_10P_1', CLASS_TOP_10P_1);			$total_add_point += CLASS_TOP_10P_1;			define('TOTAL_CLASS_TOP_10P_2', 0);			define('TOTAL_CLASS_TOP_10P_3', 0);		} elseif (class_top_10p_2($class)) {			define('TOTAL_CLASS_TOP_10P_1', 0);			define('TOTAL_CLASS_TOP_10P_2', CLASS_TOP_10P_2);			$total_add_point += CLASS_TOP_10P_2;			define('TOTAL_CLASS_TOP_10P_3', 0);		} elseif (class_top_10p_3($class)) {			define('TOTAL_CLASS_TOP_10P_1', 0);			define('TOTAL_CLASS_TOP_10P_2', 0);			define('TOTAL_CLASS_TOP_10P_3', CLASS_TOP_10P_3);			$total_add_point += CLASS_TOP_10P_3;		} else {			define('TOTAL_CLASS_TOP_10P_1', 0);			define('TOTAL_CLASS_TOP_10P_2', 0);			define('TOTAL_CLASS_TOP_10P_3', 0);		}				if (class_top_8p_10p_1($class)) {			define('TOTAL_CLASS_TOP_8P_10P_1', CLASS_TOP_8P_10P_1);			$total_add_point += CLASS_TOP_8P_10P_1;			define('TOTAL_CLASS_TOP_8P_10P_2', 0);			define('TOTAL_CLASS_TOP_8P_10P_3', 0);		} elseif (class_top_8p_10p_2($class)) {			define('TOTAL_CLASS_TOP_8P_10P_1', 0);			define('TOTAL_CLASS_TOP_8P_10P_2', CLASS_TOP_8P_10P_2);			$total_add_point += CLASS_TOP_8P_10P_2;			define('TOTAL_CLASS_TOP_8P_10P_3', 0);		} elseif (class_top_8p_10p_3($class)) {			define('TOTAL_CLASS_TOP_8P_10P_1', 0);			define('TOTAL_CLASS_TOP_8P_10P_2', 0);			define('TOTAL_CLASS_TOP_8P_10P_3', CLASS_TOP_8P_10P_3);			$total_add_point += CLASS_TOP_8P_10P_3;		} else {			define('TOTAL_CLASS_TOP_8P_10P_1', 0);			define('TOTAL_CLASS_TOP_8P_10P_2', 0);			define('TOTAL_CLASS_TOP_8P_10P_3', 0);		}		if ($class_dtb[$class] >= 8.000) {			define('TOTAL_EACH_CLASS_8P', EACH_CLASS_8P);			$total_add_point += EACH_CLASS_8P;		} else {			define('TOTAL_EACH_CLASS_8P', 0);		}				if ($class_variance[$class] <= 1.200) {			define('TOTAL_EACH_CLASS_VARIANCE_12', EACH_CLASS_VARIANCE_12);			$total_add_point += EACH_CLASS_VARIANCE_12;		} else {			define('TOTAL_EACH_CLASS_VARIANCE_12', 0);		}				define('TOTAL_EACH_CLASS_NO_5P', each_class_no_5p($class));		$total_add_point += each_class_no_5p($class);		define('TOTAL_EACH_CLASS_80PER_65P', each_class_80per_65p($class));		$total_add_point += each_class_80per_65p($class);		define('TOTAL_EACH_CLASS_50PER_8P', each_class_50per_8p($class));		$total_add_point += each_class_50per_8p($class);		define('TOTAL_EACH_CLASS_5PER_10P', each_class_5per_10p($class));		$total_add_point += each_class_5per_10p($class);				if (each_class_top_2hs_h($class)) {			define('TOTAL_EACH_CLASS_TOP_2HS_H', EACH_CLASS_TOP_2HS_H);			$total_add_point += EACH_CLASS_TOP_2HS_H;			define('TOTAL_EACH_CLASS_TOP_3HS_H', 0);		} elseif (each_class_top_3hs_h($class)) {			define('TOTAL_EACH_CLASS_TOP_2HS_H', 0);			define('TOTAL_EACH_CLASS_TOP_3HS_H', EACH_CLASS_TOP_3HS_H);			$total_add_point += EACH_CLASS_TOP_3HS_H;		} else {			define('TOTAL_EACH_CLASS_TOP_2HS_H', 0);			define('TOTAL_EACH_CLASS_TOP_3HS_H', 0);		}				############################################################		############		SUBTR POINT		########################		############################################################				if (each_class_top_2hs_l($class)) {			define('TOTAL_EACH_CLASS_TOP_2HS_L', EACH_CLASS_TOP_2HS_L);			$total_subtr_point += EACH_CLASS_TOP_2HS_L;			define('TOTAL_EACH_CLASS_TOP_3HS_L', 0);		} elseif (each_class_top_3hs_l($class)) {			define('TOTAL_EACH_CLASS_TOP_2HS_L', 0);			define('TOTAL_EACH_CLASS_TOP_3HS_L', EACH_CLASS_TOP_3HS_L);			$total_subtr_point += EACH_CLASS_TOP_3HS_L;		} else {			define('TOTAL_EACH_CLASS_TOP_2HS_L', 0);			define('TOTAL_EACH_CLASS_TOP_3HS_L', 0);		}				if ($class_dtb[$class] <= 6.000) {			define('TOTAL_EACH_CLASS_6P', EACH_CLASS_6P);			$total_subtr_point += EACH_CLASS_6P;		} else {			define('TOTAL_EACH_CLASS_6P', 0);		}				if ($class_variance[$class] >= 3.500) {			define('TOTAL_EACH_CLASS_VARIANCE_35', EACH_CLASS_VARIANCE_35);			$total_subtr_point += EACH_CLASS_VARIANCE_35;		} else {			define('TOTAL_EACH_CLASS_VARIANCE_35', 0);		}				if (class_top_l5p_1($class)) {			define('TOTAL_CLASS_TOP_L5P_1', CLASS_TOP_L5P_1);			$total_subtr_point += CLASS_TOP_L5P_1;			define('TOTAL_CLASS_TOP_L5P_2', 0);			define('TOTAL_CLASS_TOP_L5P_3', 0);		} elseif (class_top_l5p_2($class)) {			define('TOTAL_CLASS_TOP_L5P_1', 0);			define('TOTAL_CLASS_TOP_L5P_2', CLASS_TOP_L5P_2);			$total_subtr_point += CLASS_TOP_L5P_2;			define('TOTAL_CLASS_TOP_L5P_3', 0);		} elseif (class_top_l5p_3($class)) {			define('TOTAL_CLASS_TOP_L5P_1', 0);			define('TOTAL_CLASS_TOP_L5P_2', 0);			define('TOTAL_CLASS_TOP_L5P_3', CLASS_TOP_L5P_3);			$total_subtr_point += CLASS_TOP_L5P_3;		} else {			define('TOTAL_CLASS_TOP_L5P_1', 0);			define('TOTAL_CLASS_TOP_L5P_2', 0);			define('TOTAL_CLASS_TOP_L5P_3', 0);		}				define('TOTAL_CLASS_TOP_HVARIANCE', class_top_hvariance($class));		$total_subtr_point += class_top_hvariance($class);		define('TOTAL_CLASS_TOP_LPOINT', class_top_lpoint($class));		$total_subtr_point += class_top_lpoint($class);		define('TOTAL_HS_TOP_1_RED', hs_top_1_red($class));		$total_subtr_point += hs_top_1_red($class);		define('TOTAL_HS_TOP_2_RED', hs_top_2_red($class));		$total_subtr_point += hs_top_2_red($class);				define('TOTAL_HS_TOP_3_RED', hs_top_3_red($class));		$total_subtr_point += hs_top_3_red($class);		define('TOTAL_HS_TOP_RED', hs_top_red($class));		$total_subtr_point += hs_top_red($class);				define('TOTAL_EACH_L5P', each_l5p($class));		$total_subtr_point += each_l5p($class);		$total_point = $total_add_point - $total_subtr_point;				define('TOTAL_ADD_POINT', $total_add_point);		define('TOTAL_SUBTR_POINT', $total_subtr_point);		define('TOTAL_POINT', $total_point);				$tpl->assign('fb_link', SITE.'link.php?link='.base64_encode($_SERVER['REQUEST_URI']));		$tpl->assign('fb_title', 'PHPPV - Xem điểm xếp hạng lớp '.$class);		$tpl->assign('fb_descr', 'Cơ sở dữ liệu: '.$db_info['name'].' ['.$db_info['comment'].'] năm học '.$db_info['year']);				$tpl->parse('main.class_rank.class_rank_detail');		$tpl->parse('main.class_rank.class_rank_header');		$tpl->parse('main.class_rank');				$tpl->assign('dynamic_title', '- Điểm xếp hạng lớp '.$class.' - '.$db_info['name'].' '.$db_info['comment']);		break;		default: outpage('Không xác định được tham số [action]');}$sql->close();$tpl->assign('access', show_count('access'));$tpl->assign('view', show_count('view'));$tpl->assign('error', show_count('error'));$tpl->assign('notice_right', NOTICE_RIGHT_BOX);define('TIME_END', microtime(true));$sec =	round(TIME_END-TIME_START, 4);$tpl->assign('current_date', current_date());$tpl->assign('sec', $sec);$tpl->parse('main');$tpl->out('main');?>